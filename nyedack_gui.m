function batch_record_gui()


% query devices
%

devices=daqhwinfo('nidaq');

gui_ver='0.003a';
basedir='';
ylim_preview=0;
main_figure=figure('Visible','off','Name',['Batch Recorder v' gui_ver],...
                   'Position',[500,50,900,450],'NumberTitle','off',...
                   'menubar','none','resize','off',...
                   'closerequestfcn',@close_gui);

%% all possible NI channels

ch_panel.panel=uipanel('Parent',main_figure,'Title',...
                 'NI channels',...
                 'Position',[.7 .02 .27 .94]);

ch_panel.ch(1)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 0',...
              'Value',0,'Position',[10 365 100 40]);
ch_panel.ch(2)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 1',...
              'Value',0,'Position',[10 315 100 40]);
ch_panel.ch(3)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 2',...
              'Value',0,'Position',[10 265 100 40]);
ch_panel.ch(4)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 3',...
              'Value',0,'Position',[10 215 100 40]);
ch_panel.ch(5)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 4',...
              'Value',0,'Position',[10 165 100 40]);
ch_panel.ch(6)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 5',...
              'Value',0,'Position',[10 115 100 40]);
ch_panel.ch(7)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 6',...
              'Value',0,'Position',[10 65 100 40]);
ch_panel.ch(8)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 7',...
              'Value',0,'Position',[10 15 100 40]);
ch_panel.ch(9)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 8',...
              'Value',0,'Position',[125 365 100 40]);
ch_panel.ch(10)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 9',...
              'Value',0,'Position',[125 315 100 40]);
ch_panel.ch(11)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 10',...
              'Value',0,'Position',[125 265 100 40]);
ch_panel.ch(12)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 11',...
              'Value',0,'Position',[125 215 100 40]);
ch_panel.ch(13)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 12',...
              'Value',0,'Position',[125 165 100 40]);
ch_panel.ch(14)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 13',...
              'Value',0,'Position',[125 115 100 40]);
ch_panel.ch(15)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 14',...
              'Value',0,'Position',[125 65 100 40]);
ch_panel.ch(16)=uicontrol(ch_panel.panel,'Style','togglebutton',...
              'String','Channel 15',...
              'Value',0,'Position',[125 15 100 40]);

set(ch_panel.ch(:),'call',{@label_enable,ch_panel.ch})

%% recording length

rec_panel.panel=uipanel('Parent',main_figure,'Title',...
                 'Stopping time',...
                 'Position',[.04 .72 .625 .25]);

rec_panel.sliders(1) = uicontrol(rec_panel.panel,'style','slide',...
                 'position',[10 0 125 30],...
                 'min',0,'max',100,'val',0,'sliderstep',[.01 .1]); 
rec_panel.boxes(1) = uicontrol(rec_panel.panel,'style','edit',...
                    'position',[20 30 100 30],...
                    'fontsize',13,...
                    'background',[1 1 1],...
                    'string','0');
rec_panel.text(1) = uicontrol(rec_panel.panel,'style','text',...
                    'position',[20 66 100 20],...
                    'fontsize',15,...
                    'string','Days');

rec_panel.sliders(2) = uicontrol(rec_panel.panel,'style','slide',...
                 'position',[150 0 125 30],...
                 'min',0,'max',23,'val',0,'sliderstep',[.04 .2]); 
rec_panel.boxes(2) = uicontrol(rec_panel.panel,'style','edit',...
                    'position',[160 30 100 30],...
                    'fontsize',13,...
                    'background',[1 1 1],...                         
                    'string','0');
rec_panel.text(2) = uicontrol(rec_panel.panel,'style','text',...
                    'position',[160 66 100 20],...
                    'fontsize',15,...
                    'string','Hour');

rec_panel.sliders(3) = uicontrol(rec_panel.panel,'style','slide',...
                 'position',[290 0 125 30],...
                 'min',0,'max',60,'val',0,'sliderstep',[.016 .1]); 
rec_panel.boxes(3) = uicontrol(rec_panel.panel,'style','edit',...
                    'position',[300 30 100 30],...
                    'background',[1 1 1],...
                    'fontsize',13,...
                    'string','0');
rec_panel.text(3) = uicontrol(rec_panel.panel,'style','text',...
                    'position',[290 66 100 20],...
                    'fontsize',15,...
                    'string','Minute');

rec_panel.sliders(4) = uicontrol(rec_panel.panel,'style','slide',...
                 'position',[430 0 125 30],...
                 'min',0,'max',60,'val',0,'sliderstep',[.016 .1]); 
rec_panel.boxes(4) = uicontrol(rec_panel.panel,'style','edit',...
                    'position',[440 30 100 30],...
                    'background',[1 1 1],...
                    'fontsize',13,...
                    'string','0');
rec_panel.text(4) = uicontrol(rec_panel.panel,'style','text',...
                    'position',[440 66 100 20],...
                    'fontsize',15,...
                    'string','Second');

for i=1:4, align([rec_panel.sliders(i) rec_panel.boxes(i) ...
                  rec_panel.text(i)],'center','distribute'); end

%% save frequency 

save_fs_panel.panel=uipanel('Parent',main_figure,'Title',...
                 'Save frequency',...
                 'Position',[.04 .45 .625 .25]);

save_fs_panel.sliders(1) = uicontrol(save_fs_panel.panel,'style','slide',...
                 'position',[10 0 125 30],...
                 'min',0,'max',100,'val',0,'sliderstep',[.01 .1]); 
save_fs_panel.boxes(1) = uicontrol(save_fs_panel.panel,'style','edit',...
                    'position',[20 30 100 30],...
                    'background',[1 1 1],...
                    'fontsize',13,...
                    'string','0');
save_fs_panel.text(1) = uicontrol(save_fs_panel.panel,'style','text',...
                    'position',[20 66 100 20],...
                    'fontsize',15,...
                    'string','Days');

save_fs_panel.sliders(2) = uicontrol(save_fs_panel.panel,'style','slide',...
                 'position',[150 0 125 30],...
                 'min',0,'max',24,'val',0,'sliderstep',[.04 .2]); 
save_fs_panel.boxes(2) = uicontrol(save_fs_panel.panel,'style','edit',...
                    'position',[160 30 100 30],...
                    'background',[1 1 1],...
                    'fontsize',13,...
                    'string','0');
save_fs_panel.text(2) = uicontrol(save_fs_panel.panel,'style','text',...
                    'position',[160 66 100 20],...
                    'fontsize',15,...
                    'string','Hours');

save_fs_panel.sliders(3) = uicontrol(save_fs_panel.panel,'style','slide',...
                 'position',[290 0 125 30],...
                 'min',0,'max',60,'val',0,'sliderstep',[.016 .1]); 
save_fs_panel.boxes(3) = uicontrol(save_fs_panel.panel,'style','edit',...
                    'position',[300 30 100 30],...
                    'background',[1 1 1],...
                    'fontsize',13,...
                    'string','0');
save_fs_panel.text(3) = uicontrol(save_fs_panel.panel,'style','text',...
                    'position',[290 66 100 20],...
                    'fontsize',15,...
                    'string','Minutes');

save_fs_panel.sliders(4) = uicontrol(save_fs_panel.panel,'style','slide',...
                 'position',[430 0 125 30],...
                 'min',0,'max',60,'val',0,'sliderstep',[.016 .1]); 
save_fs_panel.boxes(4) = uicontrol(save_fs_panel.panel,'style','edit',...
                    'position',[440 30 100 30],...
                    'background',[1 1 1],...
                    'fontsize',13,...
                    'string','0');
save_fs_panel.text(4) = uicontrol(save_fs_panel.panel,'style','text',...
                    'position',[440 66 100 20],...
                    'fontsize',15,...
                    'string','Seconds');

for i=1:4, align([save_fs_panel.sliders(i) save_fs_panel.boxes(i) ...
                  save_fs_panel.text(i)],'center','distribute'); end

%% set the slider and edit box callbacks

set([rec_panel.sliders(:);rec_panel.boxes(:)],'call',{@slider_callback,rec_panel})
set([save_fs_panel.sliders(:);save_fs_panel.boxes(:)],'call',{@slider_callback,save_fs_panel})

%% draw the boxes for sampling rate, note, and preview 

parameters.panel=uipanel('Parent',main_figure,'Title',...
                 'Parameters',...
                 'Position',[.04 .04 .15 .375]);

parameters.sr_edit = uicontrol(parameters.panel,'style','edit',...
                    'position',[10 60 100 30],...
                    'fontsize',13,...
                    'background',[1 1 1],...
                    'string','40000');

parameters.device = uicontrol(parameters.panel,'style','popupmenu',...
		    'position',[10 30 100 30],...
		    'fontsize',13,...
		    'background',[1 1 1],...
	   	    'string',{'test';'test2'});

parameters.sr_text= uicontrol(parameters.panel,'style','text',...
                    'position',[10 90 80 50],...
                    'fontsize',13,...   
                    'string','Sampling Rate');


align([parameters.sr_edit parameters.sr_text],'center','none')


start_button=uicontrol(main_figure,'Style','pushbutton',...
              'String','Start Recording',...
              'units','normalized',...  
              'FontSize',18,...
              'Value',0,'Position',[.37 .1 .2 .1],...
              'call',@start_recording);


%%

preview_figure=figure('Visible','off','Name','Preview Settings',...
                      'Position',[800,100,400,500],'NumberTitle','off',...
                      'menubar','none','resize','off',...
                      'closerequestfcn',@toggle_visibility);

preview_check=uicontrol(preview_figure,'Style','Checkbox',...
                         'String','Enable Preview',...
                         'Units','Normalized',...
                         'FontSize',14,...
                         'background',get(preview_figure,'color'),...
                         'Value',0,'Position',[.07 .92 .6 .05],...
                         'call',@preview_enable);

refresh_rate_text = uicontrol(preview_figure,'style','text',...
                    'units','normalized',...
                    'position',[.05 .85 .9 .05],...
                    'fontsize',13,...
                    'background',get(preview_figure,'color'),...
                    'string','Refresh Rate');

hz_text = uicontrol(preview_figure,'style','text',...
                    'units','normalized',...
                    'position',[.65 .8 .1 .05],...
                    'fontsize',13,...
                    'background',get(preview_figure,'color'),...
                    'string','Hz');

refresh_rate_edit = uicontrol(preview_figure,'style','edit',...
                    'units','normalized',...
                    'position',[.4 .81 .3 .05],...
                    'fontsize',13,...
                    'background',[1 1 1],...
                    'string','4',...
                    'enable','off');

ylim_panel.panel=uipanel('Parent',preview_figure,'Title',...
                 'Y Range (in V)',...
                 'Position',[.04 .025 .925 .75]);

ylim_panel.ch(1)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[25 300 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                     'string','0');
ylim_panel.ch(2)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[25 260 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(3)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[25 220 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(4)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[25 180 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(5)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[25 140 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(6)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[25 100 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(7)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[25 60 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(8)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[25 20 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(9)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[200 300 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(10)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[200 260 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(11)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[200 220 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(12)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[200 180 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(13)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[200 140 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(14)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[200 100 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(15)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[200 60 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');
ylim_panel.ch(16)=uicontrol(ylim_panel.panel,'style','edit',...
                    'position',[200 20 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','0');

align([refresh_rate_text refresh_rate_edit],'center','none');
align([refresh_rate_edit hz_text],'none','center');


log_figure=figure('Visible','off','Name',['Log File Settings'],...
                   'Position',[500,100,400,800],'NumberTitle','off',...
                   'menubar','none','resize','off',...
                   'closerequestfcn',@toggle_visibility);

bird_name_text = uicontrol(log_figure,'style','text',...
                    'units','normalized',...
                    'position',[.05 .94 .9 .05],...
                    'fontsize',13,...
                    'background',get(log_figure,'color'),...
                    'string','Bird Name');

bird_name_edit = uicontrol(log_figure,'style','edit',...
                    'units','normalized',...
                    'position',[.05 .91 .9 .05],...
                    'fontsize',13,...
                    'background',[1 1 1],...
                    'string','Pretty bird');

align([bird_name_edit bird_name_text],'center','none')

label_panel.panel=uipanel('Parent',log_figure,'Title',...
                 'Channel Labels',...
                 'Position',[.04 .425 .925 .45]);

label_panel.ch_label(1)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[25 300 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                     'string','Channel 0');
label_panel.ch_label(2)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[25 260 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 1');
label_panel.ch_label(3)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[25 220 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 2');
label_panel.ch_label(4)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[25 180 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 3');
label_panel.ch_label(5)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[25 140 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 4');
label_panel.ch_label(6)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[25 100 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 5');
label_panel.ch_label(7)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[25 60 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 6');
label_panel.ch_label(8)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[25 20 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 7');
label_panel.ch_label(9)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[200 300 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 8');
label_panel.ch_label(10)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[200 260 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 9');
label_panel.ch_label(11)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[200 220 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 10');
label_panel.ch_label(12)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[200 180 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 11');
label_panel.ch_label(13)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[200 140 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 12');
label_panel.ch_label(14)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[200 100 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 13');
label_panel.ch_label(15)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[200 60 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 14');
label_panel.ch_label(16)=uicontrol(label_panel.panel,'style','edit',...
                    'position',[200 20 150 30],...
                    'fontsize',11,...   
                    'background',[1 1 1],...
                    'enable','off',...
                    'string','Channel 15');


stim_log_check=uicontrol(log_figure,'Style','Checkbox',...
                         'String','Log Stim Parameters',...
                         'Units','Normalized',...
                         'FontSize',14,...
                         'background',get(log_figure,'color'),...
                         'Value',0,'Position',[.07 .38 .6 .05],...
                         'call',@log_enable);

stim_panel.panel=uipanel('Parent',log_figure,'Title',...
                 'Stim Parameters',...
                 'Position',[.04 .025 .925 .35]);


stim_panel.parameters_text(1)=uicontrol(stim_panel.panel,'style','text',...
                                  'position',[10 205 100 50],...
                                  'fontsize',13,...
                                  'string','Interval');

stim_panel.parameters_edit(1)=uicontrol(stim_panel.panel,'style','edit',...
                        'position',[130 230 150 30],...
                        'fontsize',11,...
                        'background',[1 1 1],...
                        'enable','off');

stim_panel.parameters_text(2)=uicontrol(stim_panel.panel,'style','text',...
                                  'position',[10 165 100 50],...
                                  'fontsize',13,...
                                  'string','Amplitude');

stim_panel.parameters_edit(2)=uicontrol(stim_panel.panel,'style','edit',...
                        'position',[130 190 150 30],...
                        'fontsize',11,...
                        'background',[1 1 1],...
                        'enable','off');

stim_panel.parameters_text(3)=uicontrol(stim_panel.panel,'style','text',...
                                  'position',[10 125 100 50],...
                                  'fontsize',13,...
                                  'string','Duration');

stim_panel.parameters_edit(3)=uicontrol(stim_panel.panel,'style','edit',...
                        'position',[130 150 150 30],...
                        'fontsize',11,...
                        'background',[1 1 1],...
                        'enable','off');

stim_panel.parameters_text(4)=uicontrol(stim_panel.panel,'style','text',...
                                  'position',[10 85 100 50],...
                                  'fontsize',13,...
                                  'string','Pulses');

stim_panel.parameters_edit(4)=uicontrol(stim_panel.panel,'style','edit',...
                        'position',[130 110 150 30],...
                        'fontsize',11,...
                        'background',[1 1 1],...
                        'enable','off');

stim_panel.parameters_text(5)=uicontrol(stim_panel.panel,'style','text',...
                                  'position',[10 50 100 50],...
                                  'fontsize',13,...
                                  'string','Frequency');

stim_panel.parameters_edit(5)=uicontrol(stim_panel.panel,'style','edit',...
                        'position',[130 70 150 30],...
                        'fontsize',11,...
                        'background',[1 1 1],...
                        'enable','off');



stim_panel.parameters_text(6)=uicontrol(stim_panel.panel,'style','text',...
                                  'position',[10 20 80 30],...
                                  'fontsize',13,...
                                  'string','Polarity');

stim_polarity_button(1)=uicontrol(stim_panel.panel,'style','radiobutton',...
                                  'position',[130 5 80 50],...
                                  'fontsize',15,...
                                  'string','+',...
                                  'value',0,...
                                  'call',@polarity_check,...
                                  'enable','off');

stim_polarity_button(2)=uicontrol(stim_panel.panel,'style','radiobutton',...
                                  'position',[180 5 80 50],...
                                  'fontsize',15,...
                                  'string','-',...
                                  'value',0,...
                                  'call',@polarity_check,...
                                  'enable','off');


for i=1:3, align([stim_panel.parameters_text(i) ...
                  stim_panel.parameters_edit(i)],'none','center'); end


                     

%% now lay out the top menu bar for loading and saving settings

filemenu= uimenu(main_figure,...
                 'label','File');
savemenu= uimenu(filemenu,...
              'label','Save Settings',...
              'callback',@save_gui,...
              'accelerator','S');
loadmenu= uimenu(filemenu,...
                 'label','Load Settings',...
                 'callback',@load_gui,...
                 'accelerator','L');
setdirmenu= uimenu(filemenu,...
                   'label','Set Base Data Directory',...
                   'callback',@dir_choose);

quitmenu= uimenu(filemenu,...
		'label','Quit',...
		'callback',@close_gui);

window= uimenu(main_figure,...
                 'label','Window');
log_window= uimenu(window,...
                   'label','Log File Settings',...
                   'callback',{@toggle_visibility,log_figure},...
                   'accelerator','F');
preview_window= uimenu(window,...
                   'label','Preview Settings',...
                   'callback',{@toggle_visibility,preview_figure},...
                   'accelerator','p');


mfile_full=mfilename('fullpath');
mfile_dir=mfile_full(1:end-length(mfilename));
default_file=fullfile(mfile_dir,'defaults.mat');

% $$$ if exist([default_file],'file');
% $$$     disp(['Found defaults.mat, loading default settings']);
% $$$     load([default_file])
% $$$     for i=1:14, eval(['set(ch(' num2str(i) '),''value'',state.ch{' num2str(i) '})']); end
% $$$ 
% $$$     for i=1:4 
% $$$         eval(['set(rec_panel.sliders(' num2str(i) '),''value'',state.rec_panel.sliders{' num2str(i) '})'])
% $$$         eval(['set(save_fs_panel.sliders(' num2str(i) '),''value'',state.save_fs_panel.sliders{' num2str(i) '})'])   
% $$$         eval(['set(save_fs_panel.boxes(' num2str(i) '),''string'',num2str(state.save_fs_panel.sliders{' num2str(i) '}))'])
% $$$         eval(['set(rec_panel.boxes(' num2str(i) '),''string'',num2str(state.rec_panel.sliders{' num2str(i) '}))'])
% $$$     end
% $$$     
% $$$     set(note_edit,'string',state.note)
% $$$     set(parameters.sr_edit,'string',state.parameters.sr)
% $$$     set(parameters.data_dir_edit,'string',state.parameters.data_dir);
% $$$     set(preview.rr_edit,'string',state.preview.rr);
% $$$     set(preview.ymin_edit,'string',state.preview.ymin);
% $$$     set(preview.ymax_edit,'string',state.preview.ymax);
% $$$     set(preview.button,'value',state.preview.button);
% $$$     
% $$$     if state.preview.button
% $$$         set(preview.ymin_edit,'enable','on');
% $$$         set(preview.ymax_edit,'enable','on');
% $$$         set(preview.rr_edit,'enable','on');
% $$$     end
% $$$ end

set(main_figure,'Visible','on')

%% callback functions

% the callback function for sliders that allows them to interact with their edit boxes

function slider_callback(varargin)

[handle,structure]=varargin{[1,3]};

switch handle
 
 case structure.sliders(1)
 
  slider_info=get(handle,{'min','value','max'});
  set(handle,'value',round(slider_info{2}));
  slider_info=get(handle,{'min','value','max'});
  set(structure.boxes(1),'string',slider_info{2});  
 
 case structure.sliders(2)
 
  slider_info=get(handle,{'min','value','max'});
  set(handle,'value',round(slider_info{2}));
  slider_info=get(handle,{'min','value','max'});
  set(structure.boxes(2),'string',slider_info{2});  
 
 case structure.sliders(3)
 
  slider_info=get(handle,{'min','value','max'});
  set(handle,'value',round(slider_info{2}));
  slider_info=get(handle,{'min','value','max'});
  set(structure.boxes(3),'string',slider_info{2});  
 
 case structure.sliders(4)
 
  slider_info=get(handle,{'min','value','max'});
  set(handle,'value',round(slider_info{2}));
  slider_info=get(handle,{'min','value','max'});
  set(structure.boxes(4),'string',slider_info{2});  
 
 case structure.boxes(1)
 
  slider_info=get(structure.sliders(1),{'min','value','max'});
  edit_num=str2double(get(handle,'string'));
  
  if edit_num>=slider_info{1} && edit_num<=slider_info{3}
    set(structure.sliders(1),'value',edit_num)
  else
    set(handle,'string',slider_info{2})
  end
  
 case structure.boxes(2)
 
  slider_info=get(structure.sliders(2),{'min','value','max'});
  edit_num=str2double(get(handle,'string'));
  
  if edit_num>=slider_info{1} && edit_num<=slider_info{3}
    set(structure.sliders(2),'value',edit_num)
  else
    set(handle,'string',slider_info{2})
  end
  
 case structure.boxes(3)
  
  slider_info=get(structure.sliders(3),{'min','value','max'});
  edit_num=str2double(get(handle,'string'));
  
  if edit_num>=slider_info{1} && edit_num<=slider_info{3}
    set(structure.sliders(3),'value',edit_num)
  else
    set(handle,'string',slider_info{2})
  end
 
 case structure.boxes(4)
  
  slider_info=get(structure.sliders(4),{'min','value','max'});
  edit_num=str2double(get(handle,'string'));
  
  if edit_num>=slider_info{1} && edit_num<=slider_info{3}
    set(structure.sliders(4),'value',edit_num)
  else
    set(handle,'string',slider_info{2})
  end
  
end

end

function dir_choose(varargin)
    
directory=uigetdir(pwd);

if directory~=0
  basedir=directory;
end

end

% function to save the settings

function save_gui(varargin)

[filename,path]=uiputfile(...
    {'*.mat','MAT File';...
     '*.*','All Files (*.*)'},...
    'Save settings as', fullfile([mfile_dir],'defaults.mat'));

if path==0, return; end

savename=fullfile(path,filename);
  
gui_state.ch_panel.ch=get(ch_panel.ch(:),'value');
gui_state.label_panel.ch_label=get(label_panel.ch_label(:),'string');
gui_state.stim_panel.parameters_edit=get(stim_panel.parameters_edit(:),'string');
gui_state.stim_polarity_button=get(stim_polarity_button(:),'value');
gui_state.rec_panel.sliders=get(rec_panel.sliders(:),'value');
gui_state.save_fs_panel.sliders=get(save_fs_panel.sliders(:),'value');
gui_state.bird_name_edit=get(bird_name_edit,'string');
gui_state.parameters.sr=get(parameters.sr_edit,'string');
gui_state.basedir=basedir;
gui_state.preview.button=get(preview_check,'value');
gui_state.refresh_rate_edit=get(refresh_rate_edit,'string');
gui_state.preview.ylim=get(ylim_panel.ch(:),'string');
gui_state.stim_log_check=get(stim_log_check,'value');
gui_state.ylim_preview=ylim_preview;
gui_state.ylim_panel.ch=get(ylim_panel.ch(:),'string');

save([savename],'gui_state');

end

% function for loading the settings

function load_gui(varargin)

[filename,path]=uigetfile(fullfile([pwd],'*.mat'),'Choose the settings file to load');

if path==0; return; end

loadname=fullfile(path,filename);

load([loadname],'gui_state');
ylim_preview=gui_state.ylim_preview;
set(preview_check,'value',ylim_preview);
if ylim_preview, set(refresh_rate_edit,'enable','on'); end

for i=1:16
  eval(['set(ch_panel.ch(' num2str(i) '),''value'',gui_state.ch_panel.ch{' num2str(i) '})']); 
  eval(['set(label_panel.ch_label(' num2str(i) '),''string'',gui_state.label_panel.ch_label{' num2str(i) '})']); 
  eval(['set(ylim_panel.ch(' num2str(i) '),''string'',gui_state.ylim_panel.ch{' num2str(i) '})']); 
  if get(ch_panel.ch(i),'value')
    set(label_panel.ch_label(i),'enable','on');
    if ylim_preview, set(ylim_panel.ch(i),'enable','on'); end
  end
end

for i=1:4 
    eval(['set(rec_panel.sliders(' num2str(i) '),''value'',gui_state.rec_panel.sliders{' num2str(i) '})'])
    eval(['set(rec_panel.boxes(' num2str(i) '),''string'',num2str(gui_state.rec_panel.sliders{' num2str(i) '}))'])
    eval(['set(save_fs_panel.sliders(' num2str(i) '),''value'',gui_state.save_fs_panel.sliders{' num2str(i) '})'])   
    eval(['set(save_fs_panel.boxes(' num2str(i) '),''string'',num2str(gui_state.save_fs_panel.sliders{' num2str(i) '}))'])
end

for i=1:3, eval(['set(stim_panel.parameters_edit(' num2str(i) '),''string'',gui_state.stim_panel.parameters_edit{' num2str(i) '})']); end

for i=1:2, eval(['set(stim_polarity_button(' num2str(i) '),''value'',gui_state.stim_polarity_button{' num2str(i) '})']); end

set(parameters.sr_edit,'string',gui_state.parameters.sr)
basedir=gui_state.basedir;
set(bird_name_edit,'string',gui_state.bird_name_edit);
set(stim_log_check,'value',gui_state.stim_log_check);


if gui_state.stim_log_check
  for i=1:3, set(stim_panel.parameters_edit(i),'enable','on'); end
  for i=1:2, set(stim_polarity_button(i),'enable','on'); end
end

end

% last but certainly not least, the function to start the recording session!

function start_recording(varargin)

ch_pre_labels='';ch_label='';

channels=cell2mat(get(ch_panel.ch(:),'value'));
final_channels=find(channels>0)'-1;
rec_time=cell2mat(get(rec_panel.sliders(:),'value'))';
save_fs_time=cell2mat(get(save_fs_panel.sliders(:),'value'))';
sampling_rate=str2double(get(parameters.sr_edit,'string'));
preview.enable=get(preview_check,'value');
preview.samples=round(sampling_rate/str2double(get(refresh_rate_edit,'string')));
preview.ylim=[str2double(get(ylim_panel.ch(:),'string'))];
bird_name=get(bird_name_edit,'string');
ch_enabled_list=find(strcmp(get(label_panel.ch_label(:),'enable'),'on')==1)';
preview.ylim=preview.ylim(ch_enabled_list);

counter=1;

for i=ch_enabled_list
  ch_pre_labels{counter}=['NIDAQ ' num2str(i-1)];
  counter=counter+1;
end

if isempty(ch_enabled_list)
    warndlg({'You have not specified any channels!'},'Warning');
    return
end

divider='==========';
ch_post_labels=get(label_panel.ch_label([ch_enabled_list]),'string');

if length(ch_enabled_list)==1
    ch_label=[ ch_pre_labels '--->' ch_post_labels ]; 
else
    for i=1:length(ch_enabled_list), ch_label{i}=[ ch_pre_labels{i} '--->' ch_post_labels{i} ]; end
end

stim_panel.parameters_enabled=find(strcmp(get(stim_panel.parameters_edit(:),'enable'),'on')==1);
stim_panel.parameters_list=get(stim_panel.parameters_edit(stim_panel.parameters_enabled),'string');

stim_panel.parameters_pre_list={'Interval','Amplitude','Duration','Pulses','Frequency'};
stim_polarity_values={'+','-'};
stim_polarity=stim_polarity_values(find(cell2mat(get(stim_polarity_button(:),'value'))==1));

note=[ divider ' Channels ' divider '\n' ];
for i=1:length(ch_label), note=[ note '\n' ch_label{i}]; end
note=[ note '\n\n' divider ' Channels ' divider '\n\n' ];

if length(stim_panel.parameters_list)>0
  note=[ note divider ' Stim Parameters ' divider '\n' ];
  for i=1:length(stim_panel.parameters_list), note=[ note '\n' stim_panel.parameters_pre_list{i} ':  ' stim_panel.parameters_list{i} ]; end
  note=[ note '\nPolarity ' stim_polarity{1}];
  note=[note '\n\n' divider ' Stim Parameters ' divider '\n\n'];
end

note=[note 'Bird Name:  ' bird_name];
preview.ylabels=ch_post_labels;  

if isempty(basedir)
    warndlg({'You have not specified a base data directory!';...
             'Go to File-->Set Base Data Directory';},'Warning');
    return
end

batch_record(final_channels,[],rec_time,save_fs_time,note,sampling_rate,basedir,preview);

end

function toggle_visibility(varargin)

if nargin<3
    target=varargin{1};
else
    target=varargin{3};
end

switch get(target,'visible')
  
 case 'on'
  set(target,'visible','off')
  
  switch target
    case log_figure
      set(log_window,'Checked','off')
    case preview_figure
      set(preview_window,'Checked','off')
  end
  
 case 'off'
  set(target,'visible','on')
  
  switch target
    case log_figure
      set(log_window,'Checked','on')
    case preview_figure
      set(preview_window,'Checked','on')
  end
  
end

end

function label_enable(varargin)

handle=varargin{1};
if get(handle,'value')
  switch handle
   case ch_panel.ch(1)
    set(label_panel.ch_label(1),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(1),'enable','on'); end
   case ch_panel.ch(2)
    set(label_panel.ch_label(2),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(2),'enable','on'); end
   case ch_panel.ch(3)
    set(label_panel.ch_label(3),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(3),'enable','on'); end
   case ch_panel.ch(4)
    set(label_panel.ch_label(4),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(4),'enable','on'); end
   case ch_panel.ch(5)
    set(label_panel.ch_label(5),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(5),'enable','on'); end
   case ch_panel.ch(6)
    set(label_panel.ch_label(6),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(6),'enable','on'); end
   case ch_panel.ch(7)
    set(label_panel.ch_label(7),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(7),'enable','on'); end
   case ch_panel.ch(8)
    set(label_panel.ch_label(8),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(8),'enable','on'); end
   case ch_panel.ch(9)
    set(label_panel.ch_label(9),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(9),'enable','on'); end
   case ch_panel.ch(10)
    set(label_panel.ch_label(10),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(10),'enable','on'); end
   case ch_panel.ch(11)
    set(label_panel.ch_label(11),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(11),'enable','on'); end
   case ch_panel.ch(12)
    set(label_panel.ch_label(12),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(12),'enable','on'); end
   case ch_panel.ch(13)
    set(label_panel.ch_label(13),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(13),'enable','on'); end
   case ch_panel.ch(14)
    set(label_panel.ch_label(14),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(14),'enable','on'); end
   case ch_panel.ch(15)
    set(label_panel.ch_label(15),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(15),'enable','on'); end
   case ch_panel.ch(16)
    set(label_panel.ch_label(16),'enable','on')
    if ylim_preview==1, set(ylim_panel.ch(16),'enable','on'); end
  end
else
  switch handle
   case ch_panel.ch(1)
    set(label_panel.ch_label(1),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(1),'enable','off'); end
   case ch_panel.ch(2)
    set(label_panel.ch_label(2),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(2),'enable','off'); end
   case ch_panel.ch(3)
    set(label_panel.ch_label(3),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(3),'enable','off'); end
   case ch_panel.ch(4)
    set(label_panel.ch_label(4),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(4),'enable','off'); end
   case ch_panel.ch(5)
    set(label_panel.ch_label(5),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(5),'enable','off'); end
   case ch_panel.ch(6)
    set(label_panel.ch_label(6),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(6),'enable','off'); end
   case ch_panel.ch(7)
    set(label_panel.ch_label(7),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(7),'enable','off'); end
   case ch_panel.ch(8)
    set(label_panel.ch_label(8),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(8),'enable','off'); end
   case ch_panel.ch(9)
    set(label_panel.ch_label(9),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(9),'enable','off'); end
   case ch_panel.ch(10)
    set(label_panel.ch_label(10),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(10),'enable','off'); end
   case ch_panel.ch(11)
    set(label_panel.ch_label(11),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(11),'enable','off'); end
   case ch_panel.ch(12)
    set(label_panel.ch_label(12),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(12),'enable','off'); end
   case ch_panel.ch(13)
    set(label_panel.ch_label(13),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(13),'enable','off'); end
   case ch_panel.ch(14)
    set(label_panel.ch_label(14),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(14),'enable','off'); end
   case ch_panel.ch(15)
    set(label_panel.ch_label(15),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(15),'enable','off'); end
   case ch_panel.ch(16)
    set(label_panel.ch_label(16),'enable','off')
    if ylim_preview==1, set(ylim_panel.ch(16),'enable','off'); end
  end
end

end

function close_gui(varargin)
    
delete(log_figure)
delete(preview_figure)
delete(main_figure)

end

function polarity_check(varargin)
    
handle=varargin{1};

switch handle
  case stim_polarity_button(1)
    set(stim_polarity_button(1),'value',1)
    set(stim_polarity_button(2),'value',0)
  case stim_polarity_button(2)
    set(stim_polarity_button(2),'value',1)
    set(stim_polarity_button(1),'value',0)
end

end

function log_enable(varargin)

switch get(stim_log_check,'value')
  case 1
    set(stim_panel.parameters_edit(:),'enable','on')
    set(stim_polarity_button(:),'enable','on')
  case 0
    set(stim_panel.parameters_edit(:),'enable','off')
    set(stim_polarity_button(:),'enable','off')
end
end

function preview_enable(varargin)

switch get(gcbo,'value')
  case 1
    ylim_preview=1;
    set(refresh_rate_edit,'enable','on')
    for i=1:16
        if get(ch_panel.ch(i),'value')
            set(ylim_panel.ch(i),'enable','on')
        end
    end
  case 0
    ylim_preview=0;
    set(refresh_rate_edit,'enable','off')
    for i=1:16, set(ylim_panel.ch(i),'enable','off'); end
end



end

end
